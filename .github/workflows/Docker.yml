name: Docker

on:
  workflow_dispatch: {}
  # schedule:
  #   - cron: "0 16 * * 1"
  push:
    branches:
      - main
    paths:
      - Dockerfile
      - entrypoint.sh
  pull_request:
    paths:
      - Dockerfile
      - .github/workflows/Docker.yml

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  ghcr_docker: ghcr.io/docker-collection/cloudflared

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checking Repostiory
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Setup multiarch
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # tag=v2.1.0

      - name: Setup Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # tag=v2.2.1

      - name: Multiarch Test
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5 # tag=v3.2.0
        with:
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: |
            ${{ env.ghcr_docker }}:test

  Push:
    runs-on: ubuntu-latest
    needs: Test
    if: github.event_name != 'pull_request'
    steps:
      - name: Checking Repostiory
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Setup multiarch
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # tag=v2.1.0

      - name: Setup Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # tag=v2.2.1

      - name: Cache Docker layers
        uses: actions/cache@c1a5de879eb890d062a85ee0252d6036480b1fe2 # v3.2.1
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login ghcr.io
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # tag=v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Version
        id: get_version
        run: |
          version=$(grep 'CLOUDFLARED_VERSION=' Dockerfile | cut -d "=" -f 2)
          echo "## Image Version: ${version}" >> $GITHUB_STEP_SUMMARY
          echo "image_version=${version}" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea # tag=v4.1.1
        with:
          images: |
            ${{ env.ghcr_docker }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}},value=${{ steps.get_version.outputs.image_version }}
          labels: |
            org.opencontainers.image.authors=Efina
            org.opencontainers.image.title=Docker Cloudflared
            org.opencontainers.image.description=A simple version using environment control tunnel

      - name: Build & Push
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5 # tag=v3.2.0
        with:
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
